<!DOCTYPE html>
<html class="" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8">


<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/octicons-3.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/core.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/text.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/extended-ui-kit.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/up.css"><meta name="theme-color" content="#2d2d44"><link rel="mask-icon" href="https://up.htmlacademy.ru/meta/favicon.svg" color="#2e368e">


</head><body>



   <div class="page-content "><div class="page-content__inner"><div class="up-interface up-interface--up "><section class="up-interface__left-col"><nav class="breadcrumbs"><ul class="breadcrumbs__list"><li class="breadcrumbs__item"><a href="../index.htm">Главная</a></li><li class="breadcrumbs__item"><a href="networks-basics_1_module_1.htm">1. Архитектура, атаки и составляющие безопасности</a></li></ul></nav><article class="up-text"><div class="up-text__head"><h1 class="up-text__title"><svg aria-hidden="true" width="24" height="24"><use xlink:href="/img/sprites/octicons.v10.svg#file-16"></use></svg>
          1.4.&nbsp;TCP/IP
        </h1></div><div class="text-container text-container--module"><p>Теперь рассмотрим модель TCP/IP.</p><p>TCP/IP&nbsp;—
 это стандартный стек протоколов, используемый для каждой сети. 
Он&nbsp;обеспечивает адресацию приложений и&nbsp;маршрутизацию 
в&nbsp;сети.</p><p>В&nbsp;чём отличие от&nbsp;OSI? OSI&nbsp;— это 
эталонная модель, а&nbsp;не&nbsp;протокол. OSI стандартизирует, как 
должен разделяться труд при передаче данных в&nbsp;разных программных 
обеспечениях. Она важна для понимания и&nbsp;проектирования архитектуры 
системы.</p><h2>TCP/IP</h2><p>Смысл технологии&nbsp;— объединить самые 
разные сети: локальные, городские, глобальные. Работает поверх этих 
сетей, всё это склеивает и&nbsp;позволяет взаимодействовать друг 
с&nbsp;другом.</p><p>Важная задачи стека&nbsp;— обеспечить продвижение 
пакетов данных через сеть. Естественно, для такого продвижения нужно 
адресовать узлы, и&nbsp;для этого используется IP.</p><p>Как расшифровывается TCP/IP?
TCP&nbsp;— протокол управления передачей (Transmission Control Protocol).
IP&nbsp;— интернет-протокол (Interner Protocol).</p><p>Модель состоит 
не&nbsp;только из&nbsp;протоколов TCP и&nbsp;IP, но&nbsp;они основные, 
поэтому за&nbsp;ней закрепили такое название.</p><blockquote><p>Протокол
 TCP обеспечивает надёжность соединения между компьютерами. 
Он&nbsp;отвечает за&nbsp;доставку сообщений, а&nbsp;IP&nbsp;— 
за&nbsp;поиск компьютеров в&nbsp;сети.</p></blockquote><p>Компьютеры 
отличаются друг от&nbsp;друга по&nbsp;производителю, типу операционной 
системы, программной начинке. Чтобы они понимали друг друга, процесс 
коммуникации должен следовать правилам. Например, есть правила для 
передачи файлов и&nbsp;для передачи сообщений между почтовыми ящиками. 
В&nbsp;компьютерных сетях их&nbsp;определяют протоколы передачи данных.</p><h2>IP</h2><p>Internet
 Protocol (IP) является одним из&nbsp;основных протоколов слоёв 
интернета, как можно догадаться из&nbsp;его названия. 
Он&nbsp;применяется во&nbsp;всех интернет-коммуникациях.</p><p>Формально
 говоря, протокол описывает использование IP-адресов для идентификации 
подключённых к&nbsp;интернету устройств. Если проще: домам нужны 
почтовые адреса для получения почты, а&nbsp;устройствам, подключённым 
к&nbsp;интернету, нужны IP-адреса для получения сообщений.</p><p>Когда 
один компьютер отправляет сообщение на&nbsp;другой, он&nbsp;должен 
указать IP-адрес получателя, а&nbsp;также свой собственный IP-адрес, 
чтобы второй компьютер мог ответить.</p><p><img src="networks-basics_1_module_1_item_4_files/ip.jpeg" alt="Адресация в сети"></p><p>IP-адрес
 пользователя может быть сегодня одним, а&nbsp;завтра&nbsp;— другим. 
Адрес задаёт интернет-провайдер. У&nbsp;каждого интернет-провайдера есть
 диапазон адресов, которые они могут назначить. И&nbsp;они могут давать 
вам другой из&nbsp;этих адресов каждый раз, когда видят, что компьютер 
появляется в&nbsp;сети. Это называется динамическим IP-адресом.</p><p>Переключение на&nbsp;другую сеть Wi-Fi обязательно даст новый IP-адрес, так как интернет-провайдер уже другой.</p><p>Компьютеры, которые действуют как серверы, часто имеют статические IP-адреса. Например, компьютеры, на&nbsp;которых работает <a href="http://google.com/">Google.com</a>. Это упрощает быструю отправку поисковых запросов на&nbsp;серверы Google.</p><h3>IPv4 и&nbsp;IPv6-адреса</h3><p>На&nbsp;начало 2022 года используются две версии интернет-протокола:</p><ul><li>IPv4&nbsp;— первая версия, когда-либо использовавшаяся в&nbsp;интернете;</li><li>IPv6&nbsp;— обратно совместимый преемник.</li></ul><p>В&nbsp;протоколе
 IPv4 IP-адреса выглядят так: 74.125.20.113. Попробуйте посетить этот 
IP-адрес в&nbsp;своём браузере. На&nbsp;какой сайт вы&nbsp;попали?</p><p>Каждый
 IP-адрес разделён на&nbsp;четыре числа, каждое из&nbsp;которых может 
варьироваться от&nbsp;нуля до&nbsp;255. Это два в&nbsp;32 степени или 4 
294 967 296 возможных адресов IPv4. И&nbsp;это количество уже 
в&nbsp;1990-х начало заканчиваться. Создатели интернета 
не&nbsp;рассчитывали на&nbsp;такую популярность, поэтому создали 
IPv6-адреса с&nbsp;гораздо более длинной схемой адресации.</p><p>Вот так выглядит IPv6-адрес: <code>2001: 0db8: 0000: 0042: 0000: 8a2e: 0370: 7334</code>.
 В&nbsp;нём присутствуют шестнадцатеричные числа, поэтому IPv6-адрес 
намного длиннее, чем кажется. Какое&nbsp;же количество адресов теперь 
доступно? 340 282 366 920 938 000 000 000 000 000 000 000 000.</p><p>Представьте себе мир, в&nbsp;котором есть столько устройств, подключённых к&nbsp;интернету!</p><h3>IP-пакеты</h3><p>Как
 мы&nbsp;уже говорили, сообщения передаются пакетами. Каждый IP-пакет 
содержит заголовок и&nbsp;данные. Заголовок включает IP-адреса источника
 и&nbsp;назначения, а&nbsp;также другие поля, которые помогают 
маршрутизировать пакет. Данные&nbsp;— это фактическое содержимое, 
например, строка букв или часть веб-страницы.</p><p>Сообщение может 
представлять собой крошечный пинг, чтобы проверить, подключено&nbsp;ли 
другое устройство к&nbsp;сети, или быть целой веб-страницей. 
Но&nbsp;есть предел тому, насколько большим может быть сообщение, 
поскольку есть ограничение по&nbsp;количеству данных, передаваемых 
за&nbsp;один раз с&nbsp;помощью физических сетевых подключений между 
устройствами. Вот почему многие сетевые протоколы разбивают каждое 
сообщение на&nbsp;несколько небольших пакетов.</p><p>Протокол 
IP&nbsp;описывает структуру пакетов, перемещающихся по&nbsp;интернету. 
Вы&nbsp;можете представить IP-пакеты как почтовые письма: 
заголовок&nbsp;— это конверт со&nbsp;всей информацией 
о&nbsp;маршрутизации, необходимой почтовому отделению, а&nbsp;полезная 
нагрузка&nbsp;— это письмо, которое читает только получатель.</p><p>Подобно
 тому, как почтовая система направляет почтовые письма по&nbsp;всему 
миру, интернет-протокол направляет IP-пакеты по&nbsp;интернету. Давайте 
рассмотрим процесс маршрутизации пакета от&nbsp;источника к&nbsp;месту 
назначения.</p><p>Компьютеры отправляют первый пакет ближайшему 
маршрутизатору. Когда он&nbsp;получает пакет, то&nbsp;смотрит 
на&nbsp;IP-заголовок. Наиболее важным полем является IP-адрес 
назначения, который сообщает маршрутизатору, куда должен попасть пакет.</p><p>У&nbsp;маршрутизатора
 есть несколько путей, по&nbsp;которым он&nbsp;может отправить пакет, 
и&nbsp;его цель&nbsp;— отправить пакет ближайшему к&nbsp;его конечному 
пункту назначения маршрутизатору. Как это решается? 
У&nbsp;маршрутизатора есть таблица пересылки, которая помогает ему 
выбрать следующий путь на&nbsp;основе IP-адреса назначения. Как только 
маршрутизатор находит наиболее подходящий, он&nbsp;отправляет пакет 
по&nbsp;этому пути. Если всё идёт хорошо, пакет прибывает 
на&nbsp;ближайший к&nbsp;получателю маршрутизатор, который точно знает, 
куда его отправить.</p><p><img src="networks-basics_1_module_1_item_4_files/route-1.jpeg" alt=""></p><p>Что
 произойдёт, если сетевой путь больше не&nbsp;доступен, например, из-за 
того, что его захватил киберпреступник или уничтожило стихийное 
бедствие?</p><p><img src="networks-basics_1_module_1_item_4_files/route-2.jpeg" alt=""></p><p>К&nbsp;счастью,
 существует множество возможных путей, по&nbsp;которым пакет может 
пройти, чтобы достичь того&nbsp;же пункта назначения:</p><p><img src="networks-basics_1_module_1_item_4_files/route-3.jpeg" alt=""></p><p>Наличие
 нескольких путей называется избыточностью сети. Избыточность путей 
увеличивает количество возможных способов, которыми пакет может достичь 
пункта назначения.</p><p>Отказоустойчивая система сети является такой, 
в&nbsp;которой может возникнуть сбой или несколько отказов в&nbsp;его 
компонентах, но&nbsp;она по-прежнему продолжит передавать данные. 
Всё&nbsp;же интернет&nbsp;— это массивная и&nbsp;сложная система 
с&nbsp;миллионами компонентов, которые могут выйти из&nbsp;строя 
в&nbsp;любой момент, и&nbsp;многие из&nbsp;этих компонентов 
действительно ломаются.</p><p>Большой вклад в&nbsp;отказоустойчивость 
интернета вносит избыточность путей сетевой маршрутизации. Посмотрим 
пример подводной сети через Атлантический океан:</p><p><img src="networks-basics_1_module_1_item_4_files/underwater-cabel.jpeg" alt="Подводный кабель"><img src="networks-basics_1_module_1_item_4_files/underwater-fiber.jpeg" alt="Карта подводных кабелей, TeleGeography"><a href="https://www.submarinecablemap.com/">Карта подводных кабелей, TeleGeography</a></p><p>Даже
 если один из&nbsp;этих кабелей повреждён&nbsp;— есть другие кабели, 
которые могут передавать интернет-трафик через Атлантический океан.</p><p>Где-то такой избыточности&nbsp;нет. Посмотрим на&nbsp;Камчатку:</p><p><img src="networks-basics_1_module_1_item_4_files/underwater-fiber-Kamchatka.jpeg" alt="Карта подводных кабелей у Камчатки, TeleGeography"><a href="https://www.submarinecablemap.com/">Карта подводных кабелей у&nbsp;Камчатки, TeleGeography</a></p><p>Отсутствие
 избыточности может привести к&nbsp;проблемам, ведь кабель может прийти 
в&nbsp;негодность. Например, в&nbsp;2011 году бабушка случайно повредила
 лопатой кабель, в&nbsp;результате чего вся Армения и&nbsp;часть Грузии <a href="https://lenta.ru/news/2011/04/05/arminternet/">потеряли доступ в&nbsp;интернет</a> на&nbsp;день. А&nbsp;в&nbsp;2019 году корабль оборвал единственный кабель к&nbsp;полинезийскому Тонге, и&nbsp;остров <a href="https://www.nytimes.com/2019/01/31/world/asia/tonga-internet-blackout.html">остался без интернета на&nbsp;11 дней</a>.</p><p>Создание
 избыточности сети&nbsp;— дорогостоящая задача. Например, Google 
потратил 300 миллионов долларов на&nbsp;установку оптоволоконного кабеля
 между США и&nbsp;Токио.</p><p>Вернёмся к&nbsp;IP. Протокол 
IP&nbsp;описывает, как разделить сообщения на&nbsp;несколько IP-пакетов 
и&nbsp;направить пакеты к&nbsp;месту назначения путём переключения 
от&nbsp;маршрутизатора к&nbsp;маршрутизатору. Однако 
IP&nbsp;не&nbsp;обрабатывает все последствия пакетов. Например, 
потерянные пакеты, неупорядоченные, повторяющиеся, повреждённые, 
случайные дубли.</p><p>Надёжную передачу пакетов обеспечивает протокол 
TCP, который работает поверх&nbsp;IP. Он&nbsp;включает стратегии для 
упорядочивания пакетов, повторной передачи и&nbsp;целостности данных.</p><p>Если
 вы&nbsp;скачиваете, например, Discord к&nbsp;себе на&nbsp;компьютер, 
то&nbsp;потеря даже одного байта не&nbsp;запустит приложение. Поэтому 
TCP используют многие протоколы уровня приложений.</p><h2>TCP</h2><p>Протокол
 управления передачей (TCP)&nbsp;— это транспортный протокол, который 
используется поверх IP&nbsp;и&nbsp;обеспечивает надёжную передачу 
пакетов.</p><h3>Как TCP передаёт пакеты?</h3><p><strong>Убеждается, что адресат существует.</strong></p><p>Представим,
 что два компьютера хотят отправить данные друг другу. Сначала TCP 
убеждается, что адресат существует, слушает порт и&nbsp;готов принимать.
 Для этого он&nbsp;устанавливает соединение через механизм тройного 
«рукопожатия» (three-way handshake). Первый компьютер отправляет пакет 
с&nbsp;битом SYN (SYN = «Синхронизировать?»). Второй компьютер 
отправляет обратно пакет с&nbsp;битом ASK (ASK = «Подтвердить!») Плюс 
бит&nbsp;SYN. Первый компьютер отвечает ASK:</p><p><img src="networks-basics_1_module_1_item_4_files/syn-ask.jpeg" alt=""></p><p>Три
 пакета, участвующие в&nbsp;тройном «рукопожатии», обычно 
не&nbsp;содержат никаких данных. После того как компьютеры завершили 
рукопожатие, они готовы принимать пакеты, содержащие фактические данные.</p><p><strong>Обеспечивает надёжность передачи данных.</strong></p><p>Затем
 пакеты на&nbsp;отправляющем узле маркируются порядковым номером 
и&nbsp;отправляются. После этого отправляющий узел запрашивает 
подтверждение от&nbsp;получающего по&nbsp;каждому сегменту. Если 
какой-то из&nbsp;них не&nbsp;дошёл, то&nbsp;сегмент отправляет повторно.
 Если адресат не&nbsp;отвечает после нескольких попыток, то&nbsp;сессия 
разрывается. То&nbsp;есть этот протокол точно доставит верные данные, 
если сессия не&nbsp;разорвалась.</p><p><strong>TCP доставляет сегменты в&nbsp;отправленном порядке.</strong></p><p>Сегменты
 упаковываются каждый в&nbsp;свой пакет. Поэтому промежуточные узлы 
ничего не&nbsp;знают о&nbsp;содержимом этих пакетов. Также пакеты могут 
идти с&nbsp;разной скоростью и&nbsp;разными путями. TCP склеивает 
их&nbsp;по&nbsp;порядковым номерам и&nbsp;передаёт дальше.</p><p><strong>Контролирует скорость передачи данных.</strong></p><p>Если
 данные передаются с&nbsp;быстрого сервера на&nbsp;медленный, они 
не&nbsp;будут передаваться быстрее, чем доступно для медленного сервера.</p><h2>Важные моменты стека TCP/IP</h2><p>Подведём итог. Сама технология ничего не&nbsp;передаёт, а&nbsp;использует ту&nbsp;технологию, поверх которой находится.</p><ul><li>Контролирует, чтобы данные шли дальше.</li><li>Фрагментирует пакеты данных под технологию передачи.</li><li>Передаёт трафик разного вида.</li><li>Может разобраться с&nbsp;требованиями надёжности, скорости передачи, безопасности.</li><li>Может осуществить логическое соединение.</li><li>Предоставляет в&nbsp;рамках сеанса относительно равномерную скорость.</li></ul><p>Таким
 образом, стек протоколов TCP/IP&nbsp;— это команда надёжной передачи 
данных. В&nbsp;следующей статье рассмотрим архитектуру слоёв стека 
TCP/IP и&nbsp;сравним с&nbsp;OSI.</p></div>

</div></div></div>
</body></html>