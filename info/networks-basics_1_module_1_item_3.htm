<!DOCTYPE html>
<html class="" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8">

<link rel="stylesheet" href="networks-basics_1_module_1_item_3_files/octicons-3.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_3_files/core.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_3_files/text.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_3_files/extended-ui-kit.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_3_files/up.css"><meta name="theme-color" content="#2d2d44"><link rel="mask-icon" href="https://up.htmlacademy.ru/meta/favicon.svg" color="#2e368e">


</head><body>


          
              <div class="page-content "><div class="page-content__inner"><div class="up-interface up-interface--up "><section class="up-interface__left-col"><nav class="breadcrumbs"><ul class="breadcrumbs__list"><li class="breadcrumbs__item"><a href="../index.htm">Главная</a></li><li class="breadcrumbs__item"><a href="networks-basics_1_module_1.htm">1. Архитектура, атаки и составляющие безопасности</a></li></ul></nav><article class="up-text"><div class="up-text__head"><h1 class="up-text__title"><svg aria-hidden="true" width="24" height="24"><use xlink:href="/img/sprites/octicons.v10.svg#file-16"></use></svg>
          1.3.&nbsp;Модель OSI
        </h1></div><div class="text-container text-container--module"><p>OSI
 и&nbsp;TCP/IP&nbsp;— две самые широко используемые сетевые модели для 
построения маршрута. В&nbsp;этой и&nbsp;следующих статьях мы&nbsp;будем 
рассматривать их&nbsp;подробно.</p><p>OSI (Open Systems 
Interconnection)&nbsp;— это не&nbsp;протокол, а&nbsp;модель, основанная 
на&nbsp;концепции многоуровневости. Она разработана Международной 
организацией по&nbsp;стандартизации. Имеет вертикальный набор слоёв, 
каждый из&nbsp;которых выполняет свои функции.</p><p>Основная цель 
модели OSI&nbsp;— провести проектирование и&nbsp;разработку 
оборудования, устройств и&nbsp;программного обеспечения таким образом, 
чтобы они могли максимально эффективно взаимодействовать.</p><p>Обратите
 внимание, что модель OSI носит рекомендательный характер. Это такой 
идеальный вариант, чтобы информация дошла успешно. Также она позволяет 
понять, как проходят данные на&nbsp;уже существующих проектах, где эта 
информация может быть утеряна или перехвачена, а&nbsp;также ускорить 
передачу данных.</p><p>Понимание путей передачи и&nbsp;процессов во&nbsp;время передачи позволяет создать более эффективную архитектуру.</p><p>Говоря
 простыми словами, OSI&nbsp;— это модель процесса передачи данных, 
который разделён на&nbsp;семь частей. Визуально это выглядит так:</p><p><img src="networks-basics_1_module_1_item_3_files/osi-route.jpg" alt="Путь данных по модели OSI"></p><p>В&nbsp;каждой
 из&nbsp;этих частей используются свои протоколы, которые добавляют 
к&nbsp;полезной информации собственные данные или преобразуют&nbsp;их. 
Дополнения нужны, чтобы информация дошла до&nbsp;получателя. Такой 
процесс можно сравнить с&nbsp;курьерской доставкой из&nbsp;Москвы 
в&nbsp;Санкт-Петербург. Доставка должна пройти через курьера, который 
заберёт посылку по&nbsp;адресу. Затем на&nbsp;сортировочном пункте 
посылка попадёт на&nbsp;распределение на&nbsp;поезд или самолёт. 
И&nbsp;так далее, пока пакет не&nbsp;поступит получателю. 
В&nbsp;процессе этой передачи на&nbsp;каждой точке есть собственные 
стандарты, необходимые для передачи информации, проверки безопасности 
и&nbsp;многого другого.</p><p>Итак, уровни. Каждый уровень абстрагирован
 от&nbsp;других и&nbsp;ничего не&nbsp;знает 
об&nbsp;их&nbsp;существовании. Сравним с&nbsp;той&nbsp;же доставкой 
посылки. Почтовому отделению неважно, как посылка попала 
на&nbsp;распределение: отправитель сам её&nbsp;принёс, отправил соседа 
или вызвал курьера. Также почтовому отделению неважно, как посылку будут
 доставлять дальше: поездом, самолётом или кораблём. Почтовое отделение 
выполняет только свою функцию, и&nbsp;на&nbsp;этом&nbsp;всё. 
На&nbsp;уровнях модели OSI такой&nbsp;же принцип.</p><p>Рассмотрим каждый уровень отдельно.</p><h2>07 Прикладной уровень (Application)</h2><p>Именно
 с&nbsp;этого уровня начинается отсылка сообщения, когда приложение 
передаёт данные по&nbsp;сети. Этот уровень инициирует и&nbsp;позволяет 
приложению использовать разные сетевые службы. Например, службы 
удалённого доступа к&nbsp;файлам, взаимодействие по&nbsp;протоколам, 
с&nbsp;базой данных, просмотр интернет-страниц и&nbsp;так далее.</p><p>Это
 единственный уровень, который напрямую взаимодействует с&nbsp;данными 
пользователей. При этом сами приложения не&nbsp;являются частью уровня. 
На&nbsp;этом уровне обрабатывается информация из&nbsp;приложений.</p><p>Протоколы
 здесь не&nbsp;задумываются о&nbsp;гарантии доставки информации или 
маршрутизации, этим занимаются нижестоящие уровни. На&nbsp;прикладном 
уровне необходима реализация конкретных действий. Например, получение 
HTML-кода или email-сообщения конкретным адресатом.</p><p>На&nbsp;этом уровне работают протоколы HTTP, EMAIL/POP, FTP, SMTP.</p><p><img src="networks-basics_1_module_1_item_3_files/osi.jpeg" alt="Модель OSI"></p><h2>06 Уровень представления (Presentation)</h2><p>Преобразовывает
 информацию без изменения содержания в&nbsp;тот вид, который понятен для
 разных машин, то&nbsp;есть на&nbsp;разных операционных системах, 
в&nbsp;том числе мобильных, мультимедийных системах, любых 
микропрограммах. Например, когда нужно с&nbsp;приложения на&nbsp;iOS 
включить программу на&nbsp;телевизоре или с&nbsp;ноутбука запустить 
мультиварку и&nbsp;робот-пылесос.</p><p>В&nbsp;одной из&nbsp;серий 
«Южного парка» Smart TV&nbsp;начал сжигать дома вместо переключения 
на&nbsp;другой канал. Как раз на&nbsp;этом уровне обеспечивается 
понимание между разными устройствами, чтобы Smart TV&nbsp;правильно 
понял получаемую им&nbsp;информацию. Также здесь происходит кодирование 
и&nbsp;декодирование, шифрование и&nbsp;дешифрование. Чтобы всё было 
передано и&nbsp;преобразовано в&nbsp;понятном для принимающего 
устройства виде.</p><p>Например, протокол RDP обеспечивает удалённое 
подключение к&nbsp;компьютеру с&nbsp;другой операционной системой. 
Та&nbsp;операционная система, которая отправляет, должна точно передать 
данные. А&nbsp;принимающая ОС&nbsp;должна точно их&nbsp;принять.</p><p>Здесь&nbsp;же протокол SSL с&nbsp;безопасным соединением между компьютером и&nbsp;сервером.</p><h2>05 Сеансовый уровень (Session)</h2><p>Здесь
 происходит открытие и&nbsp;закрытие связи между двумя компьютерами 
(сеанс&nbsp;— это период между открытием и&nbsp;закрытием). Этот уровень
 отвечает за&nbsp;поддержание сеанса связи между устройствами 
и&nbsp;их&nbsp;синхронизации.</p><p>Представьте, что вы&nbsp;говорите 
по&nbsp;телефону и&nbsp;собираетесь пройти по&nbsp;подземному переходу. 
Вы&nbsp;знаете, что звонок продолжится, но&nbsp;связи не&nbsp;будет. 
Когда вы&nbsp;выйдете из&nbsp;перехода, связь восстановится 
и&nbsp;вы&nbsp;продолжите разговор. Этот уровень как раз отвечает 
за&nbsp;то, чтобы в&nbsp;момент прекращения соединения поступали запросы
 на&nbsp;повторное соединение через небольшой промежуток времени.</p><ul><li>Есть соединение?</li><li>Нет.</li><li>Есть соединение?</li><li>Нет.</li><li>Есть соединение?</li><li>Да, продолжаем сеанс связи.</li></ul><p>Здесь&nbsp;же происходит управление токенами и&nbsp;синхронизация.</p><p>Протоколы: TCP.</p><h2>04 Транспортный уровень (Transport)</h2><p>Отвечает
 за&nbsp;надёжность передачи данных, при этом могут быть разные степени 
надёжности. Здесь&nbsp;же решается порядок передачи данных. Например, 
для видеотрансляции максимально важна скорость доставки. 
Её&nbsp;пропустят, как скорый поезд. А&nbsp;какая-нибудь картинка может 
доставляться долго и&nbsp;будет пропускать «другие поезда».</p><p>Протоколы: TCP, UDP.</p><h2>03 Сетевой уровень (Network)</h2><p>Образует
 единую транспортную систему из&nbsp;сетей, построенных по&nbsp;разным 
сетевым технологиям. Обеспечивает маршрутизацию&nbsp;— куда какой поток 
данных направить. Даёт адрес. Есть протоколы, которые обеспечивают 
информацию, насколько нагружена сеть.</p><p>Протоколы: IP, RIP, OSPF.</p><h2>02 Канальный уровень (Data link)</h2><p>В&nbsp;глобальных
 сетях обеспечивает доставку между двумя соседними узлами. 
В&nbsp;локальных сетях, где многие уровни OSI отсутствуют, на&nbsp;этом 
уровне возложена доставка данных от&nbsp;начала до&nbsp;конца. Работает 
за&nbsp;счёт «железа».</p><p>На&nbsp;втором уровне проверяются 
и&nbsp;исправляются ошибки передачи. Здесь мы&nbsp;оперируем понятиями 
«фрейм» или «кадр». Это полезные данные, которым добавлена 
дополнительная служебная информация, например адрес отправителя 
и&nbsp;получателя. Нам также нужно сообщать, от&nbsp;кого и&nbsp;кому 
предназначаются пересылаемые данные.</p><p>Здесь появляются первые 
идентификаторы MAC-адреса. MAC-адрес&nbsp;— это уникальный номер 
сетевого оборудования или сетевого порта, то&nbsp;есть физический адрес.
 Он&nbsp;нужен, чтобы идентифицировать устройство в&nbsp;одной сети. 
То&nbsp;есть MAC-адрес&nbsp;— это адрес устройства на&nbsp;канальном 
уровне. На&nbsp;этом уровне обитают такие устройства, как 
коммутаторы&nbsp;— переключатели, которые нужны для соединения узлов 
компьютерной сети.</p><p>Протоколы: Ethernet (проводная связь), PPP (протокол «точка-точка», который транспортирует IP&nbsp;пакеты).</p><h2>01 Физический уровень (Physical)</h2><p>Передаются
 данные в&nbsp;сеть, не&nbsp;вникая в&nbsp;смысл передаваемой 
информации. Проще говоря, это уровень проводов. Управляется канальным 
уровнем.</p><p>Информация кодируется в&nbsp;биты, чтобы компьютер мог их&nbsp;понять.</p><p>Среди
 технологий, которые живут на&nbsp;первом уровне, можно выделить 
основной стандарт&nbsp;— Ethernet, он&nbsp;находится на&nbsp;нескольких 
уровнях, а&nbsp;также Bluetooth, WI-FI, USB, инфракрасный порт 
и&nbsp;другие.</p><p>Все сетевые устройства работают 
по&nbsp;модели&nbsp;OSI. Некоторые используют все семь уровней, 
а&nbsp;другие&nbsp;— меньше. Например, компьютер или смартфон используют
 все уровни, маршрутизатор (он&nbsp;же роутер, сетевое устройство, 
которое перенаправляет пакеты данных)&nbsp;— три нижних уровня, 
коммутатор&nbsp;— только два нижних уровня.</p><p><img src="networks-basics_1_module_1_item_3_files/osi-route-extended.jpeg" alt="Маршрут по OSI с маршрутизатором и коммутатором"></p><p>Использование
 меньшего количество уровней у&nbsp;маршрутизаторов и&nbsp;коммутаторов 
позволяет обрабатывать данные в&nbsp;несколько раз быстрее.</p><p>Таким образом, пакет данных дополняется или преобразовывается в&nbsp;пути:</p><p><img src="networks-basics_1_module_1_item_3_files/data-with-meta-data.jpg" alt="Преобразование пакета данных в пути"></p><p>Мы&nbsp;разобрали,
 какой путь проходит информация при отправке. Эти знания очень важны. 
Без них сложно или даже невозможно справиться со&nbsp;сбоями или 
оптимизировать производительность веб-приложения.</p><h2>Основные моменты</h2><ol><li>Модель OSI&nbsp;— это теоретическая эталонная модель.</li><li>Передача между уровнями определена протоколами.</li><li>При переходе с&nbsp;уровня на&nbsp;уровень данные дополняются или преобразовываются.</li><li>Уровни могут сочетать похожие функции.</li></ol><p>В&nbsp;следующей статье мы&nbsp;рассмотрим стек протоколов TCP/IP.</p></div></div></div></div>


</body></html>