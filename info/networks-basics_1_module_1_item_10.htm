<!DOCTYPE html>
<html class="" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8">


<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/octicons-3.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/core.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/text.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/extended-ui-kit.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/up.css"><meta name="theme-color" content="#2d2d44"><link rel="mask-icon" href="https://up.htmlacademy.ru/meta/favicon.svg" color="#2e368e">


</head><body>

              <div class="page-content "><div class="page-content__inner"><div class="up-interface up-interface--up "><section class="up-interface__left-col"><nav class="breadcrumbs"><ul class="breadcrumbs__list"><li class="breadcrumbs__item"><a href="../index.htm">Главная</a></li><li class="breadcrumbs__item"><a href="networks-basics_1_module_1.htm">1. Архитектура, атаки и составляющие безопасности</a></li></ul></nav><article class="up-text"><div class="up-text__head"><h1 class="up-text__title"><svg aria-hidden="true" width="24" height="24"><use xlink:href="/img/sprites/octicons.v10.svg#file-16"></use></svg>
          1.10.&nbsp;Безопасность и&nbsp;её&nbsp;составляющие
        </h1></div><div class="text-container text-container--module"><p>Давайте разберём, из&nbsp;чего состоит безопасность веб-приложений по&nbsp;уровням TCP/IP.</p><h2>Главные термины</h2><p><img src="networks-basics_1_module_1_item_10_files/data.jpeg" alt=""></p><p><strong>Атака</strong>&nbsp;—
 любое действие нарушителя, которое приводит к&nbsp;реализации угрозы 
путём использования уязвимостей информационной системы.</p><p><strong>Приватность</strong>
 (privacy)&nbsp;— гарантия доступа к&nbsp;секретным данным только 
пользователям с&nbsp;разрешением. Пассивной атакой здесь будет получение
 логина или пароля пользователя с&nbsp;целью возможного использования. 
Инструмент защиты приватности&nbsp;— шифрование.</p><p><strong>Целостность</strong>
 (integrity)&nbsp;— гарантия сохранности данными правильных значений. 
Например, активной атакой здесь будет подмена суммы платежа и&nbsp;счёта
 назначения при оплате на&nbsp;сайте. Инструмент защиты: хеш-функции.</p><p><strong>Аутентификация</strong>
 (autentification)&nbsp;— подтверждение того, что сервер, с&nbsp;которым
 общаемся, именно тот, за&nbsp;кого себя выдаёт. Инструменты защиты: 
цифровая подпись (например, сервера банка, на&nbsp;сайте которого 
проводим оплату), инфраструктура открытых ключей (проверка цифровой 
подписи).</p><p><strong>Доступность</strong> (availability)&nbsp;— гарантия того, что авторизованные пользователи всегда получат доступ к&nbsp;данным.</p><p>Требования
 безопасности могут меняться в&nbsp;зависимости от&nbsp;назначения 
системы, характера используемых данных и&nbsp;типа возможных угроз. 
Например, если вы&nbsp;публикуете веб-приложение и&nbsp;хотите сделать 
его доступным для широкого круга людей, то&nbsp;конфиденциальность здесь
 не&nbsp;требуется. Однако требования целостности и&nbsp;доступности 
нужны. Трудно представить систему, для которой были&nbsp;бы неважны 
свойства целостности и&nbsp;доступности, но&nbsp;вот конфиденциальность 
точно не&nbsp;всегда обязательна.</p><p>Далее мы&nbsp;будем говорить об&nbsp;угрозах, уязвимости и&nbsp;рисках. Поэтому сначала разберёмся с&nbsp;терминами.</p><p><strong>Угроза</strong>&nbsp;—
 потенциально возможное событие, явление или процесс, которое 
посредством воздействия на&nbsp;компоненты информационной системы может 
привести к&nbsp;нанесению ущерба. Например, киберпреступник решил 
получить данные пользователей.</p><p><strong>Уязвимость</strong>&nbsp;— 
любая характеристика или свойство информационной системы, использование 
которой нарушителем может привести к&nbsp;реализации угрозы. Например, 
код написан таким образом, что нарушитель может получить данные 
пользователей.</p><p><strong>Риск</strong>&nbsp;— вероятность того, что источник угрозы воспользуется уязвимостью.</p><p><strong>Воздействие</strong>&nbsp;—
 нечто, приводящее к&nbsp;потерям в&nbsp;связи с&nbsp;действиями 
источника угрозы. Уязвимости воздействуют на&nbsp;компанию 
и&nbsp;приводит к&nbsp;тому, что ей&nbsp;может быть нанесён ущерб. Если 
управление паролями слабое, а&nbsp;требования к&nbsp;паролям 
не&nbsp;внедрены, компания подвержена возможному воздействию 
в&nbsp;результате компрометации паролей пользователей 
и&nbsp;их&nbsp;использования для несанкционированного доступа.</p><p><strong>Контрмеры</strong> (или защитные меры)&nbsp;— меры, внедрение которых позволяет снизить уровень потенциального риска.</p><p><strong>Хакер</strong>
 (Hacker)&nbsp;— кто-то, кто взламывает системы, обычно с&nbsp;целью 
захватить данные или заставить систему работать так, как 
её&nbsp;разработчики изначально не&nbsp;планировали.</p><p><strong>White Hat</strong>&nbsp;—
 их&nbsp;иногда называют «этичными хакерами», так как они используют 
хакерские методы для помощи компаниям в&nbsp;повышении безопасности.</p><p><strong>Black Hat</strong>&nbsp;—
 киберпреступник. Человек, который использует хакерские методы для 
взлома систем, чтобы получить прибыль, создать хаос или удовлетворить 
свои интересы и&nbsp;цели.</p><p><strong>Grey Hat</strong>&nbsp;— нечто 
среднее между этичными хакерами и&nbsp;киберпреступниками. Иногда такие 
хакеры нарушают закон, например, пытаются взломать приложения без 
разрешения. Но&nbsp;часто это делается ради интереса или признания, 
а&nbsp;не&nbsp;ради выгоды или создания хаоса.</p><p><strong>Пентестер</strong>
 (penetration tester)&nbsp;— человек, которому платят за&nbsp;взлом 
системы теми способами, какие применил&nbsp;бы хакер. Если человек 
пытается найти ошибки в&nbsp;приложении, с&nbsp;которым у&nbsp;него нет 
подписанного контракта о&nbsp;подобных действиях, 
то&nbsp;он&nbsp;считается киберпреступником, а&nbsp;не&nbsp;пентестером.</p><p><strong>Охотник за&nbsp;багами</strong>
 (bug bounty hunter)&nbsp;— внештатный пентестер. Часто крупные компании
 создают «программы ответственного раскрытия информации», в&nbsp;рамках 
которых за&nbsp;сообщение о&nbsp;«дырах» в&nbsp;системе безопасности 
можно получить денежное вознаграждение. Некоторые охотники 
за&nbsp;багами работают в&nbsp;режиме полной занятости, но&nbsp;часто 
таким вещами занимаются профессионалы в&nbsp;свободное от&nbsp;работы 
время.</p><h2>Какая система может считаться безопасной</h2><p>Абсолютно 
безопасных систем не&nbsp;бывает&nbsp;— это утопия. Любые определения 
безопасной системы абстрактны и&nbsp;не&nbsp;описывают конкретных 
рекомендаций. Всё сводится к&nbsp;тому, что система безопасна, если она 
ведёт себя точно так, как задумано&nbsp;— и&nbsp;ничего больше. Это 
можно понять так: если пользователь создаёт пароль, то&nbsp;этот пароль 
должен получить только сервер данного приложения.</p><h2>Что мешает создавать безопасное приложение</h2><p>Программы
 создают люди, поэтому ответственность за&nbsp;безопасность делят все 
системы на&nbsp;пути передачи данных. Как мы&nbsp;помним из&nbsp;модели 
OSI, протоколов на&nbsp;пути огромное количество, и&nbsp;ответственность
 за&nbsp;безопасность делят все люди, создавшие или работавшие 
с&nbsp;этими протоколами.</p><p>Ещё один важный момент&nbsp;— 
пользователю нельзя доверять. Например, нельзя разрешать пользователю 
задавать совершенно любой пароль: важно позаботиться о&nbsp;том, чтобы 
простой пароль 123456 или password123 невозможно было использовать.</p><h2>Если невозможно создать абсолютно безопасную систему, то&nbsp;какую информацию стоит защищать</h2><p>Если
 веб-разработчик использует своё время на&nbsp;улучшение кода вместо 
написания новой «опции», это не&nbsp;всегда оправдано для компании. 
Также важно задавать вопросы. Какой ущерб понесёт компания при потере 
или раскрытии данных? Кто или что является возможным источником угрозы? 
С&nbsp;какими атаками можно столкнуться? Насколько они реальны?</p><p>Важен
 баланс между возможным ущербом и&nbsp;затратами 
на&nbsp;её&nbsp;предотвращение. К&nbsp;примеру, мы&nbsp;можем 
«принудить» пользователей создавать пароль минимум из&nbsp;10 символов 
с&nbsp;использованием цифр и&nbsp;знаков, а&nbsp;также подтверждать свою
 личность через номер телефона при помощи кода. Такой вариант 
действительно безопасен, но&nbsp;количество зарегистрированных 
пользователей будет меньше, чем при создании просто надёжного пароля. 
Так что здесь важен баланс между безопасностью и&nbsp;итоговым 
результатом.</p><p>Ни&nbsp;одна система безопасности не&nbsp;гарантирует
 защиту данных на&nbsp;100%, поскольку является результатом компромисса 
между возможными рисками, возможными затратами и&nbsp;пользовательским 
опытом.</p><hr><p>Подведём итоги: все веб-приложения уязвимы, данные 
пользователей не&nbsp;защищены от&nbsp;атак. Дальше мы&nbsp;будем 
рассматривать варианты защит.</p></div>


</div></div></div>



</body></html>