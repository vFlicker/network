<!DOCTYPE html>
<html class="" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8">


<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/octicons-3.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/core.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/text.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/extended-ui-kit.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/up.css"><meta name="theme-color" content="#2d2d44">

</head><body>

              <div class="page-content "><div class="page-content__inner"><div class="up-interface up-interface--up "><section class="up-interface__left-col"><nav class="breadcrumbs"><ul class="breadcrumbs__list"><li class="breadcrumbs__item"><a href="../index.htm">Главная</a></li><li class="breadcrumbs__item"><a href="networks-basics_1_module_2.htm">2. Защита данных</a></li></ul></nav><article class="up-text"><div class="up-text__head"><h1 class="up-text__title"><svg aria-hidden="true" width="24" height="24"><use xlink:href="/img/sprites/octicons.v10.svg#file-16"></use></svg>
          2.2.&nbsp;TLS
        </h1></div><div class="text-container text-container--module"><p>TLS
 (Transport Layer Security)&nbsp;— это просто обновлённая, более 
безопасная версия&nbsp;SSL. Многие хостинг-провайдеры называют такие 
сертификаты безопасности SSL, потому что это более используемый термин. 
Но&nbsp;на&nbsp;самом деле все «SSL-сертификаты», которые вы&nbsp;видите
 у&nbsp;хостинг-провайдеров, являются сертификатами SSL/TLS, в&nbsp;том 
числе и&nbsp;бесплатные SSL-сертификаты.</p><blockquote><p>Не&nbsp;существует
 просто сертификата SSL или просто сертификата TLS, и&nbsp;не&nbsp;нужно
 беспокоиться о&nbsp;замене сертификата SSL на&nbsp;сертификат TLS.</p></blockquote><p>TLS
 устраняет некоторые уязвимости безопасности в&nbsp;более ранних 
протоколах SSL и&nbsp;основан на&nbsp;уже действующей 
спецификации&nbsp;SSL. Как единственную защиту TLS редко используют: 
чаще берут связку обоих сертификатов SSL/TLS. Такая поддержка 
гарантирует работу и&nbsp;с&nbsp;новыми, и&nbsp;со&nbsp;старыми 
устройствами.</p><h2>Как появился TLS</h2><p>Для начала посмотрим историю возникновения TLS и&nbsp;выхода версий.</p><p>SSL
 2.0 был впервые выпущен в&nbsp;феврале 1995 года: SSL 1.0 никогда 
не&nbsp;выпускался публично из-за недостатков безопасности. При этом 
у&nbsp;SSL 2.0 тоже были проблемы с&nbsp;безопасностью, поэтому 
в&nbsp;1996 году его заменили на&nbsp;SSL 3.0.</p><p>В&nbsp;1999 году 
появилась первая версия TLS (1.0) как обновление до&nbsp;SSL 3.0. 
С&nbsp;тех пор было выпущено ещё три версии TLS, последней 
из&nbsp;которых является TLS 1.3. Она появилась в&nbsp;августе 2018 
года.</p><p>Сейчас обе общедоступные версии SSL устарели и&nbsp;имеют уязвимости безопасности (подробнее об&nbsp;этом позже).</p><p><strong>Полная история выпусков SSL и&nbsp;TLS:</strong></p><ul><li>SSL 1.0&nbsp;— никогда не&nbsp;выпускался публично из-за проблем с&nbsp;безопасностью.</li><li>SSL 2.0&nbsp;— выпущен в&nbsp;1995 году. Не&nbsp;рекомендуется в&nbsp;2011 году. Известны проблемы с&nbsp;безопасностью.</li><li>SSL 3.0&nbsp;— выпущен в&nbsp;1996 году. Не&nbsp;рекомендуется в&nbsp;2015 году. Известны проблемы с&nbsp;безопасностью.</li><li>TLS 1.0&nbsp;— выпущен в&nbsp;1999 году как обновление до&nbsp;SSL 3.0. Поддержка прекращена.</li><li>TLS 1.1&nbsp;— выпущен в&nbsp;2006 году. Поддержка прекращена.</li><li>TLS 1.2&nbsp;— выпущен в&nbsp;2008 году.</li><li>TLS 1.3&nbsp;— выпущен в&nbsp;2018 году.</li></ul><p>TLS
 использует как симметричное шифрование, так и&nbsp;шифрование 
с&nbsp;открытым ключом для безопасной отправки личных данных, 
а&nbsp;также добавляет дополнительные функции безопасности, такие как 
аутентификация и&nbsp;обнаружение подделки сообщений.</p><p><strong>Протокол TLS предоставляет три услуги:</strong></p><ol><li>Шифрование: сокрытие данных, передаваемых от&nbsp;одного компьютера к&nbsp;другому.</li><li>Аутентификация: проверка подлинности сервера и&nbsp;клиента.</li><li>Целостность: обнаружение подмены.</li></ol><h2>Как TLS и&nbsp;SSL работают для защиты данных?</h2><p>Когда
 пользователь заходит на&nbsp;сайт, его браузер ищет сертификат SSL/TLS 
этого сайта. Затем браузер выполняет «рукопожатие», чтобы 
аутентифицировать сервер и&nbsp;проверить, действителен&nbsp;ли 
сертификат. Если сертификат SSL недействителен, пользователи могут 
столкнуться с&nbsp;ошибкой «Ваше подключение не&nbsp;защищено».</p><p><img src="networks-basics_1_module_2_item_2_files/http-browser.jpeg" alt="«Ваше подключение не защищено»"></p><p>Второй
 сценарий: если браузер пользователя определяет, что сертификат 
действителен, и&nbsp;аутентифицирует ваш сервер. В&nbsp;таком случае 
браузер создаёт зашифрованную связь между сертификатом и&nbsp;сервером 
для безопасной передачи данных.</p><p>Здесь также появляется HTTPS. HTTPS означает «HTTP через SSL/TLS».</p><p>При
 использовании обычного HTTP эта информация уязвима для атак. 
Но&nbsp;когда вы&nbsp;используете HTTP через SSL/TLS, вы&nbsp;шифруете 
и&nbsp;аутентифицируете эти данные во&nbsp;время транспортировки. Это 
делает их&nbsp;безопасными.</p><p>Чтобы «рукопожатие» сработало, обе 
стороны должны поддерживать один и&nbsp;тот&nbsp;же протокол. Главное 
преимущество наличия нескольких протоколов&nbsp;— это совместимость. 
Например, Chrome и&nbsp;Firefox добавили поддержку TLS 1.3 почти сразу 
после его выпуска в&nbsp;2018 году. Компаниям Apple и&nbsp;Microsoft 
потребовалось чуть больше времени, чтобы добавить в&nbsp;свои браузеры 
поддержку TLS 1.3.</p><p>Как видите, даже в&nbsp;2022 году не&nbsp;все браузеры поддерживают TLS 1.3:</p><p><img src="networks-basics_1_module_2_item_2_files/tls-1-3-support.png" alt="Поддержка TLS 1.3 браузерами"></p><p>TLS 1.2 поддерживают все браузеры:</p><p><img src="networks-basics_1_module_2_item_2_files/tls-1-2-support.png" alt="Поддержка TLS 1.2 браузерами"></p><p>Включив
 на&nbsp;сервере TLS 1.3 и&nbsp;TLS 1.2, вы&nbsp;можете гарантировать 
совместимость и&nbsp;при этом получить преимущества TLS 1.3 для 
браузеров, которые его поддерживают.</p><p>Если вы&nbsp;хотите проверить, какую версию SSL/TLS использует ваш браузер, можете использовать <a href="https://www.howsmyssl.com/">инструмент How’s My&nbsp;SSL</a>:</p><p><img src="networks-basics_1_module_2_item_2_files/howsmyssl.png" alt="Инструмент How's My SSL"></p><p>Подводя
 итог, можно сказать, что TLS и&nbsp;SSL&nbsp;— это протоколы для 
аутентификации и&nbsp;шифрования передачи данных в&nbsp;интернете. Они 
тесно связаны, и&nbsp;TLS на&nbsp;самом деле является более современной 
и&nbsp;безопасной версией SSL.</p><p>Хотя SSL по-прежнему является 
доминирующим термином в&nbsp;интернете, большинство людей 
в&nbsp;действительности имеют в&nbsp;виду TLS, когда говорят 
про&nbsp;SSL. Ведь обе общедоступные версии SSL небезопасны и&nbsp;давно
 устарели.</p><p>В&nbsp;это&nbsp;же время «SSL сертификаты» поддерживают
 SSL и&nbsp;TLS протоколы. Поэтому вам не&nbsp;нужно беспокоиться 
о&nbsp;«замене» сертификата SSL на&nbsp;сертификат&nbsp;TLS. Если 
вы&nbsp;уже установили «SSL-сертификат», можете быть уверены, что 
он&nbsp;также поддерживает TLS.</p><p>Далее при упоминании SSL или TLS мы&nbsp;будем иметь в&nbsp;виду связку SSL/TLS.</p><p>Важно
 использовать последние версии&nbsp;TLS. SSL больше не&nbsp;является 
безопасным, но&nbsp;ваш сертификат не&nbsp;определяет протокол, который 
использует ваш сервер. При получении сертификата вы&nbsp;можете выбрать,
 какие протоколы использовать на&nbsp;уровне сервера.</p><h2>SSL/TLS и&nbsp;OSI</h2><p>Где находится SSL/TLS в&nbsp;модели&nbsp;OSI? Вспомним основные моменты:</p><ol><li>TLS&nbsp;—
 это сокращённое от&nbsp;Transport Layer Security и&nbsp;переводится как
 «Безопасность транспортного уровня», то&nbsp;есть это транспортный 
уровень.</li><li>HTTPS&nbsp;— это HTTP поверх TLS, опять транспортный уровень.</li><li>Поскольку
 он&nbsp;реализует идентификацию сеанса, целостность, запуск, разрыв 
и&nbsp;управление, он&nbsp;в&nbsp;значительной степени принадлежит ещё 
и&nbsp;сеансовому уровню.</li></ol><p>Таким образом, на&nbsp;самом деле 
TLS в&nbsp;основном относится к&nbsp;сеансовому уровню, поскольку 
обеспечивает безопасность сеанса для транспорта (TCP). Другими способами
 он&nbsp;предоставляет функции аутентификации, которые явно относятся 
к&nbsp;прикладному уровню.</p><p>Так что SSL/TLS обеспечивает безопасность слоя 5 и&nbsp;немного слоя 7.</p><h2>Практическое применение</h2><p>И&nbsp;что
 с&nbsp;этими знаниями делать дальше? Когда вы&nbsp;проектируете 
веб-приложение, вам важно понимать, какие технологии и&nbsp;библиотеки 
использовать.</p><p>Допустим, вы&nbsp;максимально обеспечили 
безопасность процессов передачи данных, защитили уровень 
приложения&nbsp;— транспортный. И&nbsp;при этом использовали вредоносный
 npm-пакет. Здесь уже проделанная безопасность не&nbsp;поможет.</p><p>Примеры таких пакетов и&nbsp;их&nbsp;версий можно посмотреть в&nbsp;статьях «<a href="https://www.securitylab.ru/news/526277.php">В&nbsp;популярных NPM-пакетах coa и&nbsp;rc&nbsp;обнаружен вредоносный код</a>» и&nbsp;«<a href="https://blog.npmjs.org/post/163723642530/crossenv-malware-on-the-npm-registry">Вредоносное ПО&nbsp;crossenv в&nbsp;реестре npm</a>».</p><hr><p>Знание того, где находится ваша часть работы в&nbsp;стеке&nbsp;— ключ к&nbsp;правильному выполнению ваших задач.</p></div>

                       </div></div></div>



</body></html>