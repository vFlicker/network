<!DOCTYPE html>
<html class="" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8">


<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/octicons-3.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/core.css">
<link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/text.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/extended-ui-kit.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_1_files/up.css"><meta name="theme-color" content="#2d2d44"><link rel="mask-icon" href="https://up.htmlacademy.ru/meta/favicon.svg" color="#2e368e">


</head><body>



      <div class="page-content "><div class="page-content__inner"><div class="up-interface up-interface--up "><section class="up-interface__left-col"><nav class="breadcrumbs"><ul class="breadcrumbs__list"><li class="breadcrumbs__item"><a href="../index.htm">Главная</a></li><li class="breadcrumbs__item"><a href="networks-basics_1_module_1.htm">1. Архитектура, атаки и составляющие безопасности</a></li></ul></nav><article class="up-text"><div class="up-text__head"><h1 class="up-text__title"><svg aria-hidden="true" width="24" height="24"><use xlink:href="/img/sprites/octicons.v10.svg#file-16"></use></svg>
          1.5.&nbsp;Архитектура TCP/IP
        </h1></div><div class="text-container text-container--module"><p>В&nbsp;предыдущей
 статье мы&nbsp;познакомились с&nbsp;основными моментами стека. Сейчас 
рассмотрим архитектуру слоёв стека TCP/IP и&nbsp;сравним с&nbsp;OSI.</p><h2>Уровни TCP/IP</h2><p>TCP/IP, как и&nbsp;OSI, является многоуровневой моделью. Она состоит из&nbsp;четырёх уровней.</p><h3>Уровень сетевых интерфейсов</h3><p>Уровень
 сетевых интерфейсов (или канальный уровень) отвечает за&nbsp;размещение
 и&nbsp;приём пакетов. TCP/IP разработан так, чтобы не&nbsp;зависеть 
от&nbsp;метода доступа к&nbsp;сети, формата пакетов и&nbsp;носителя.</p><p>TCP/IP
 не&nbsp;вдаётся в&nbsp;подробности, просто знает, поверх какой 
технологии сейчас находится: локальной, городской, глобальной или 
телефонной. Он&nbsp;просто фрагментирует данные под эту технологию 
и&nbsp;дальше отправляет ей&nbsp;эти фрагменты. Нижние технологии 
он&nbsp;рассматривает как передатчик данных. Это позволяет такой 
технологии работать независимо от&nbsp;технологии, поверх которой 
строится.</p><p>Четырёхуровневая модель&nbsp;— коммуникационная модель. 
Поэтому мы&nbsp;можем её&nbsp;рассмотреть с&nbsp;точки зрения общения 
из&nbsp;реальной жизни.</p><p>Таня и&nbsp;Катя&nbsp;— подруги, которые 
живут в&nbsp;разных городах. Скоро у&nbsp;Кати день рождения, 
и&nbsp;Таня решила отправить ей&nbsp;в&nbsp;подарок коллекционную серию 
книг о&nbsp;Гарри Поттере. Таня живёт в&nbsp;городе А, Катя&nbsp;— 
в&nbsp;городе Б.</p><p>В&nbsp;этом случае Таня&nbsp;— отправитель, 
а&nbsp;Катя&nbsp;— получатель. В&nbsp;коллекционной серии о&nbsp;Гарри 
Поттере семь книг, каждая весит, скажем, килограмм. Таня упаковывает все
 книги в&nbsp;конверт, итоговый вес которого получается 7кг. 
На&nbsp;конверте написан адрес Тани и&nbsp;адрес Кати.</p><p>Дальше идёт описание передачи книг.</p><h2>Прикладной уровень</h2><p>Таня
 подходит к&nbsp;ближайшему почтовому ящику и&nbsp;кладёт 
7-килограммовый конверт в&nbsp;«почтовый ящик». На&nbsp;этом задача Тани
 закончена. Тане не&nbsp;нужно беспокоиться о&nbsp;том, как почтальон 
выполнит свою работу.</p><p>Эта часть является прикладным уровнем.</p><h2>Транспортный уровень</h2><p>Когда
 «почтальон» подходит к&nbsp;почтовому ящику, он&nbsp;собирает 
в&nbsp;нём все конверты (вместе с&nbsp;7-килограммовым конвертом Тани).</p><p>НО!
 Сортировочная контора принимает только посылки весом не&nbsp;более 
килограмма. В&nbsp;связи с&nbsp;этим «почтальон» делает следующее:</p><ol><li>Вынимает все семь книг из&nbsp;конверта Тани.</li><li>Помещает каждую книгу в&nbsp;один конверт весом в&nbsp;килограмм.</li><li>Отмечает номера всех семи конвертов по&nbsp;порядку.</li><li>Пишет адрес Тани и&nbsp;адрес Кати на&nbsp;всех конвертах.</li><li>Относит все конверты в&nbsp;сортировочный центр города отправления.</li></ol><p>На&nbsp;этом
 работа почтальона закончена. Ему не&nbsp;нужно заботиться о&nbsp;том, 
как сортировочная служба доставляет конверты по&nbsp;назначению. 
То&nbsp;есть «почтальон» не&nbsp;должен беспокоиться о&nbsp;деталях 
того, как сортировочная служба выполняет свою работу.</p><p>Эта часть&nbsp;— транспортный уровень.</p><h2>Сетевой уровень</h2><p>Поскольку
 в&nbsp;«сортировочном офисе города А» есть все конверты Тани, они 
должны отправить эти конверты в&nbsp;город Б, чтобы потом их&nbsp;можно 
было доставить Кате. Но&nbsp;есть некоторые правила, которым должны 
следовать сортировочные центры.</p><p>Правила могут быть такими:</p><ul><li>на&nbsp;конверте должна быть почтовая марка;</li><li>на&nbsp;конверте должны быть указаны правильные адреса отправителя и&nbsp;получателя (во&nbsp;избежание двусмысленности);</li><li>пункт назначения должен находиться в&nbsp;той&nbsp;же стране, что и&nbsp;отправитель.</li></ul><p>Сортировочный офис следит за&nbsp;тем, чтобы все правила соблюдались должным образом.</p><p><strong>Примечание</strong>: приведённые выше правила указаны только для примера, они ненастоящие и&nbsp;могут быть разными.</p><p>Для
 отправки конвертов в&nbsp;другой город сортировочному отделу приходится
 использовать услуги перевозчика. Например, сортировочное бюро 
оплачивает услуги по&nbsp;перевозке конвертов в&nbsp;разные города.</p><p>Итак,
 сортировочная служба передаёт конверты в&nbsp;службу доставки. 
На&nbsp;этом её&nbsp;работа закончена. Ей&nbsp;не&nbsp;нужно 
беспокоиться о&nbsp;том, как служба доставки отправляет свои конверты 
в&nbsp;разные города или как работает служба доставки.</p><p>Эта часть является сетевым уровнем.</p><h2>Канальный уровень</h2><p>Служба
 доставки получила все конверты и&nbsp;должна отправить 
их&nbsp;в&nbsp;город&nbsp;Б. Она может выполнить работу разными 
способами, например:</p><ul><li>по&nbsp;воздуху&nbsp;— авиаперелёт;</li><li>по&nbsp;земле&nbsp;— автобус, грузовик, машина;</li><li>по&nbsp;воде&nbsp;— корабль.</li></ul><p>Предположим,
 служба доставки выбирает авиаперелёт. Когда посылка с&nbsp;конвертами 
прибывает в&nbsp;аэропорт города назначения (аэропорт в&nbsp;городе Б), 
служба перевозчика доставляет их&nbsp;в&nbsp;сортировочный пункт этого 
города.</p><p>На&nbsp;этом работа службы доставки закончена. 
Ей&nbsp;не&nbsp;нужно думать о&nbsp;том, как сортировочная служба города
 Б&nbsp;будет доставлять конверты адресату.</p><p>Эта часть является канальным уровнем.</p><h2>Аналогии с&nbsp;реальной передачей данных</h2><ul><li>Таня&nbsp;— отправитель.</li><li>Конверт 7кг&nbsp;— данные.</li><li>Почтовый ящик в&nbsp;качестве внешнего прикладного программного обеспечения, например: Telegram, Gmail, Facebook.</li><li>Помещение
 каждой книги в&nbsp;отдельный конверт и&nbsp;указание порядкового 
номера и&nbsp;адресов Тани и&nbsp;Кати на&nbsp;каждом конверте&nbsp;— 
это сегментация данных на&nbsp;пакеты. Примечание: сегментация 
выполняется в&nbsp;соответствии с&nbsp;пропускной способностью сетевого 
уровня.</li><li>Каждый конверт весом килограмм&nbsp;— это пакеты данных.</li><li>Почтальон&nbsp;— служба протокола транспортного уровня, например, TCP, UDP.</li><li>Сортировочный
 офис&nbsp;— служба протокола сетевого уровня, то&nbsp;есть 
IP&nbsp;(в&nbsp;случае связи через интернет), FTP и&nbsp;другие.</li><li>Служба оператора&nbsp;— служба протокола канального уровня, например, Wi-Fi, Ethernet-кабель.</li><li>Катя&nbsp;— получатель данных.</li></ul><h2>Для чего модель разделена на&nbsp;слои?</h2><p>Вот основные преимущества, предлагаемые моделью слоёв:</p><ol><li><p>Каждый
 слой действует как отдельный модуль. Поэтому каждый отдельный модуль 
можно модифицировать, не&nbsp;затрагивая другие слои. Например, если 
за&nbsp;конвертами приходит новый почтальон, то&nbsp;это не&nbsp;влияет 
на&nbsp;Таню или сортировочную контору. Конечно, до&nbsp;тех пор, пока 
этот новый почтальон хорошо выполняет свою работу.</p></li><li><p>Каждый
 слой автономен и&nbsp;имеет отдельные задачи. Поэтому каждый слой может
 сосредоточить все свои ресурсы на&nbsp;выполнении своей работы 
и&nbsp;не&nbsp;беспокоиться о&nbsp;работе других слоёв. Например, 
почтальон просто собирает конверты, при необходимости разделяет 
их&nbsp;содержимое и&nbsp;сдаёт в&nbsp;сортировочное бюро. Ему 
не&nbsp;нужно тратить энергию на&nbsp;размышления о&nbsp;том, как 
работает сортировочный офис.</p></li><li><p>Иерархическая организация 
системы. Существует непрерывный поток данных между различными уровнями, 
и&nbsp;нет никакой двусмысленности в&nbsp;отношении выполнения различных
 операций. Есть определённый порядок выполнения работ, что упрощает 
проектирование и&nbsp;внедрение систем связи. Например, сортировочная 
служба не&nbsp;может выполнять свою работу, если почтальон 
не&nbsp;доставил конверты.</p></li></ol><h2>С&nbsp;какими проблемами можно столкнуться во&nbsp;время передачи данных?</h2><ul><li>Конверты могут быть повреждены в&nbsp;пути или даже утеряны.</li><li>Возможно,
 книги будут доставлены в&nbsp;разные&nbsp;дни. То&nbsp;есть одни книги 
доставят Кате вовремя, а&nbsp;другие&nbsp;— позже.</li><li>Катя может 
получить книги в&nbsp;неправильном порядке. То&nbsp;есть сначала она 
получит седьмой том, через три дня&nbsp;— пятый и&nbsp;так далее.</li></ul><p>Что
 можно сделать, чтобы избежать таких ситуаций? «Нанять почтальона», 
который следит за&nbsp;доставкой книг в&nbsp;целости и&nbsp;сохранности 
(первый том → второй том 2 → … → седьмой том) и&nbsp;информирует Таню, 
когда книги доходят до&nbsp;Кати. Этого «надёжного почтальона» можно 
рассматривать как службу протокола TCP.</p><p>Исходя из&nbsp;всего вышесказанного, протокол TCP выполняет следующие задачи:</p><ul><li>доставляет пакеты данных по&nbsp;порядку;</li><li>если
 пакеты данных теряются в&nbsp;пути или повреждаются (битовая ошибка), 
то&nbsp;информирует об&nbsp;этом отправителя: посылает сообщение 
об&nbsp;ошибке;</li><li>повторно передаёт пакеты данных, если есть какая-то проблема.</li></ul><p>Программные
 приложения, которым необходима такая надёжная передача данных через 
интернет (IP&nbsp;как сетевой протокол), используют TCP в&nbsp;качестве 
транспортного протокола. Про них говорят: «Такие приложения используют 
TCP».</p><p>Теперь рассмотрим эти&nbsp;же уровни на&nbsp;более формальном и&nbsp;профессиональном языке.</p><h2>Уровень сетевого интерфейса</h2><p>Этот
 уровень соотносится с&nbsp;канальным и&nbsp;физическим уровнями 
модели&nbsp;OSI. Здесь идёт подготовка пакетов для передачи 
на&nbsp;следующий уровень.</p><p>Протоколы: Ethernet (проводная связь), PPP (протокол «точка-точка», который транспортирует IP&nbsp;пакеты).</p><h2>Интернет-уровень</h2><p>Цель
 этого уровня&nbsp;— адресовать пакет, упаковать и&nbsp;составить 
маршрут до&nbsp;сети назначения. Дальше сеть доставляет эти данные 
окончательно тому узлу, которому они были адресованы. На&nbsp;этом 
уровне IP&nbsp;добавляет к&nbsp;пакетам заголовок, который известен как 
IP-адрес.</p><p>Протоколы: IP&nbsp;(интернет-протокол), ARP (протокол 
разрешения адресов), ICMP (интернет-протокол управляющих сообщений, 
отвечает за&nbsp;предоставление функций диагностики и&nbsp;сообщения 
об&nbsp;ошибках из-за неудачной доставки IP-пакетов).</p><h2>Транспортный уровень</h2><p>Этот уровень позволяет доставлять данные из&nbsp;источника на&nbsp;хост назначения.</p><p>Обеспечивает два типа доставки сообщений:</p><ol><li>Гарантированная доставка сообщений с&nbsp;заданным классом надёжности. Это протокол TCP.</li><li>Негарантированная,
 то&nbsp;есть доставка по&nbsp;возможности («пропадут&nbsp;— 
ну&nbsp;и&nbsp;ладно»). Это протокол&nbsp;UDP. Отправляет данные 
в&nbsp;виде дейтаграмм. Дейтаграммы&nbsp;— блок информации, передаваемый
 независимо от&nbsp;других пакетов без установки соединения 
и&nbsp;подтверждения приёма. Слово дейтаграмма было выбрано 
по&nbsp;аналогии со&nbsp;словом телеграмма.</li></ol><h2>Уровень приложения</h2><p>Этот
 уровень также называют прикладным. Он&nbsp;позволяет пользователям 
получать доступ к&nbsp;услугам глобального или частного интернета.</p><p>Протоколы:
 протокол передачи гипертекста (HTTP), система доменных имён (DNS), 
передача файлов (FTP), транспортный протокол в&nbsp;реальном времени 
(RTP), виртуальный терминал (TELNET), электронная почта (SMTP).</p><p>Уровень приложений TCP/IP является комбинацией прикладного уровня, уровня представления и&nbsp;сеансового уровня модели OSI.</p><h2>Сопоставление стека TCP/IP с&nbsp;моделью OSI:</h2><p><img src="networks-basics_1_module_1_item_5_files/tcp-and-osi.jpeg" alt="Сопоставление OSI и TCP/IP"></p><h3>Основные различия между TCP/IP и&nbsp;OSI</h3><ul><li>TCP/IP&nbsp;— это модель клиент-сервер, а&nbsp;OSI&nbsp;— концептуальная модель.</li><li>TCP/IP&nbsp;—
 это стандартный протокол, используемый для каждой сети, включая 
интернет. OSI&nbsp;— это не&nbsp;протокол, а&nbsp;эталонная модель, 
её&nbsp;используют для понимания и&nbsp;проектирования архитектуры 
системы</li></ul><p>Далее вас ждёт тест по&nbsp;модели OSI и&nbsp;стеку 
TCP/IP. После него мы&nbsp;посмотрим, как диагностировать проблемы 
по&nbsp;модели TCP/IP и&nbsp;OSI.</p></div>

</div></div></div>



</body></html>