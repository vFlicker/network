<!DOCTYPE html>
<html class="" lang="ru"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8">


<link rel="stylesheet" href="networks-basics_1_module_1_item_2_files/octicons-3.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_2_files/core.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_2_files/text.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_2_files/extended-ui-kit.css"><link rel="stylesheet" href="networks-basics_1_module_1_item_2_files/up.css"><meta name="theme-color" content="#2d2d44"><link rel="mask-icon" href="https://up.htmlacademy.ru/meta/favicon.svg" color="#2e368e">


</head><body>


              <div class="page-content "><div class="page-content__inner"><div class="up-interface up-interface--up "><section class="up-interface__left-col"><nav class="breadcrumbs"><ul class="breadcrumbs__list"><li class="breadcrumbs__item"><a href="../index.htm">Главная</a></li><li class="breadcrumbs__item"><a href="networks-basics_1_module_1.htm">1. Архитектура, атаки и составляющие безопасности</a></li></ul></nav><article class="up-text"><div class="up-text__head"><h1 class="up-text__title"><svg aria-hidden="true" width="24" height="24"><use xlink:href="/img/sprites/octicons.v10.svg#file-16"></use></svg>
          1.2.&nbsp;Что такое веб-сервер и&nbsp;протоколы
        </h1></div><div class="text-container text-container--module"><p>Начнём с&nbsp;самого общего, с&nbsp;интернета.</p><p>Интернет&nbsp;—
 это открытая сеть, к&nbsp;ней может присоединиться любое устройство, 
если оно соблюдает правила игры. Такие устройства ещё называются 
сетевыми. В&nbsp;сети правила известны как протоколы. Они определяют, 
как каждое устройство должно взаимодействовать друг с&nbsp;другом. 
Именно поэтому курс называется «Протоколы и&nbsp;сети: основы»: 
мы&nbsp;будем изучать эти правила и&nbsp;учиться работать с&nbsp;ними.</p><p>Интернет
 позволяет устройствам связываться друг с&nbsp;другом. Неважно, для 
отправки сообщений электронной почты, загрузки файлов или для 
использования веб-сайтов.</p><p>Прототип интернета создавал Поль Баран <a href="https://en.wikipedia.org/wiki/Paul_Baran#:~:text=doctoral%20work.%5B8%5D-,Packet%20switched%20network%20design,-%5Bedit%5D">(Paul Baran)</a>
 в&nbsp;70-е годы прошлого века. Он&nbsp;реализовал коммуникацию между 
сетями, которая продолжала&nbsp;бы действовать даже после ядерной атаки.
 Эта сеть и&nbsp;стала прототипом интернета, она связывает устройства 
вне зависимости от&nbsp;экономических, политических, социальных или 
военных условий.</p><p>Каждый протокол определяет правила выполнения 
конкретных задач. К&nbsp;примеру, HTTP (Hyper Text Transfer Protocol) 
даёт возможность просматривать веб-страницы и&nbsp;файлы 
в&nbsp;интернете, а&nbsp;SSH (Secure Shell) используется для защищённого
 удалённого доступа к&nbsp;ОС. Для работы с&nbsp;каждым протоколом 
предназначено своё программное обеспечение. Например, для протокола HTTP
 это браузер.</p><p><img src="networks-basics_1_module_1_item_2_files/1.jpeg" alt="Планета Земля, планшет в Мексике, ноутбук в Бразилии, компьютер в Екатеринбурге, ноутбук в Камчатке, смартфон в Австралии"></p><p>Для создания глобальной сети требуются:</p><ul><li>Провода и&nbsp;беспроводная связь&nbsp;— физические соединения между устройствами.</li><li>IP&nbsp;—
 протокол, который идентифицирует устройства с&nbsp;помощью IP-адресов 
и&nbsp;предоставляет стратегию маршрутизации (то&nbsp;есть маршрута) для
 отправки данных на&nbsp;IP-адрес получателя.</li><li>TCP/UDP&nbsp;— 
протоколы, которые могут передавать пакеты данных от&nbsp;одного 
устройства к&nbsp;другому и&nbsp;при этом проверять наличие ошибок.</li><li>TLS&nbsp;—
 безопасный протокол для отправки зашифрованных данных, чтобы 
злоумышленники не&nbsp;могли просматривать личную информацию.</li><li>HTTP
 и&nbsp;DNS&nbsp;— протоколы, управляющие Всемирной паутиной, которые 
браузер использует каждый раз, когда вы&nbsp;загружаете веб-страницу. 
DNS переводит IP-адрес в&nbsp;понятное для людей доменное имя.</li></ul><p>В&nbsp;курсе мы&nbsp;рассмотрим эти технологии подробно, а&nbsp;пока познакомимся с&nbsp;основными моментами.</p><h2>HTTP</h2><p>HTTP&nbsp;— это протокол, работающий в&nbsp;формате запрос-ответ с&nbsp;двумя участниками общения:</p><ul><li>клиент (формирует запросы, обрабатывает ответы);</li><li>сервер (обрабатывает запросы, формирует ответы).</li></ul><p><img src="networks-basics_1_module_1_item_2_files/client-server.jpeg" alt="Взаимодействие клиента и сервера"></p><p>Такое
 клиент-серверное приложение называется веб-приложением. В&nbsp;нём 
клиентом выступает браузер, а&nbsp;сервером&nbsp;— веб-сервер. 
Веб-сервер пересылает браузеру набор текстовых файлов. Браузер реализует
 клиентскую часть&nbsp;— пользовательский интерфейс, а&nbsp;также 
формирует запросы к&nbsp;серверу и&nbsp;обрабатывает ответы 
от&nbsp;него.</p><p>Клиентом называют любое устройство, с&nbsp;помощью 
которого пользователь управляет веб-приложением. Это может быть 
компьютер, мобильный телефон, смарт-часы или сенсорный экран 
в&nbsp;электромобиле. На&nbsp;этом курсе в&nbsp;качестве клиента 
мы&nbsp;будем рассматривать обычный браузер.</p><p>Веб-сервер&nbsp;— это
 специальная программа, которая принимает запрос пользователя 
и&nbsp;каждый раз генерирует файл со&nbsp;страницей. Первые веб-серверы 
передавали только текстовую информацию. Современные веб-серверы работают
 с&nbsp;файлами различных форматов, умеют сжимать и&nbsp;шифровать 
передаваемые данные.</p><p>Веб-сервер предоставляет хостинг-компания. 
Также мы&nbsp;можем установить программу на&nbsp;сервер сами. Ещё 
веб-сервер можно установить на&nbsp;компьютере локально. Локальный 
сервер&nbsp;— это эмулятор хостинга. Он&nbsp;нужен для создания сайта 
на&nbsp;своём компьютере, чтобы в&nbsp;дальнейшем перенести его 
на&nbsp;хостинг. Локальный сервер открывается по&nbsp;адресу <code>http://127.0.0.1/Проект/</code> или <code>http://localhost/Проект/</code>.</p><p><strong>Вопрос</strong>: <code>http://127.0.0.1</code> и&nbsp;<code>http://localhost</code> одинаковы?</p><p><strong>Ответ</strong>: на&nbsp;большинстве компьютеров <code>localhost</code> и&nbsp;<code>http://127.0.0.1</code> функционально одинаковы. Но&nbsp;<code>localhost</code>&nbsp;— это метка для IP-адреса, а&nbsp;не&nbsp;сам адрес, то&nbsp;есть зарезервированное доменное имя для частных IP-адресов. <code>Localhost</code> на&nbsp;самом деле может указывать на&nbsp;разные IP-адреса.</p><p>Порой
 локальный сервер не&nbsp;нужен для создания сайта. Речь идёт 
о&nbsp;случаях, когда в&nbsp;проекте есть только файлы HTML, CSS 
и&nbsp;JS, которые просто меняются через текстовый редактор 
и&nbsp;открываются в&nbsp;браузере. Веб-сервер нужен для работы 
с&nbsp;препроцессорами, менеджерами задач, CMS, а&nbsp;также при работе 
с&nbsp;базой данных или для бэкенда.</p><p>Общение с&nbsp;сервером можно представить как общение с&nbsp;технической службой поддержки:</p><ul><li>звучит звонок клиента = формируется запрос клиента (браузера);</li><li>клиент знает, куда звонить = клиент знает, где сервер;</li><li>поднимается трубка = устанавливается соединение;</li><li>оператор слушает клиента = сервер обрабатывает запрос.</li></ul><p>Представим,
 что взаимодействие состоит из&nbsp;одного вопроса клиента и&nbsp;одного
 ответа сервера. Как только оператор ответит, он&nbsp;положит трубку 
и&nbsp;будет ждать другой звонок&nbsp;— другой запрос.</p><p>Современные
 серверы обрабатывают нескольких клиентов одновременно, как если&nbsp;бы
 у&nbsp;оператора было много телефонов, на&nbsp;которые он&nbsp;умеет 
одновременно отвечать.</p><p>У&nbsp;запроса есть заголовки, то&nbsp;есть
 дополнительная системная информация Зачем они нужны? Они могут передать
 какую-либо информацию. Например, когда пользователь скачивает фильм, 
то&nbsp;можно показать оставшееся время загрузки, объём файла, длину 
воспроизведения, формат&nbsp;— всё это поможет визуализировать прогресс.</p><p><img src="networks-basics_1_module_1_item_2_files/data-information.jpeg" alt="Полезная и служебная информация при передаче данных"></p><p>Такая служебная информация добавляется протоколами. Это мы&nbsp;будем рассматривать в&nbsp;следующих статьях.</p><p>Поскольку
 сервер и&nbsp;клиент могут быть написаны на&nbsp;разных языках, именно 
заголовки используются как «служебная информация», помогающая 
им&nbsp;понять друг друга. Также в&nbsp;этом помогают порты. Технически 
номер порта&nbsp;— это просто цифры в&nbsp;определённом месте данных, 
приходящих на&nbsp;сервер.</p><p>Представим порты как двери 
из&nbsp;фильма «Матрица: Перезагрузка». Данные попадают в&nbsp;коридор 
с&nbsp;множеством дверей. Некоторые двери закрыты, некоторые&nbsp;— 
открыты. Обычно дверь 80 открыта (порт&nbsp;80). Браузер об&nbsp;этом 
знает и&nbsp;по&nbsp;умолчанию идёт туда. Когда вы&nbsp;открываете 
страницу сайта, скорее всего, браузер зашёл в&nbsp;порт&nbsp;80. Браузер
 это знает и&nbsp;даже не&nbsp;дописывает в&nbsp;адресную строку.</p><p>Посмотрим, что происходит, когда пользователь загружает страницу.</p><p>Если вы&nbsp;напечатаете в&nbsp;адресной строке браузера <code>https://htmlacademy.ru/courses</code> и&nbsp;нажмёте клавишу Enter, то&nbsp;откроется страница с&nbsp;курсами.</p><p>На&nbsp;самом
 базовом уровне произошло следующее: браузер сформировал подключение 
к&nbsp;веб-серверу, отправил запрос на&nbsp;получение веб-страницы 
и&nbsp;получил её.</p><p>Теперь немного подробнее. URL состоит из&nbsp;трёх частей:</p><ul><li>протокола&nbsp;— https;</li><li>имени сервера&nbsp;— <a href="http://www.htmlacademy.ru/">www.htmlacademy.ru</a>;</li><li>адреса страницы&nbsp;— courses.</li></ul><p>Браузер обращается к&nbsp;серверу доменных имён DNS, чтобы перевести имя сайта <code>www.htmlacademy.ru</code>
 в&nbsp;IP-адрес, который он&nbsp;использует для подключения 
к&nbsp;серверной машине. Браузер соединяется с&nbsp;веб-сервером 
по&nbsp;указанному IP-адресу. То&nbsp;есть DNS был создан для того, 
чтобы нам не&nbsp;нужно было запоминать адрес сайта как IP-номер, это 
неудобно. Поэтому мы&nbsp;можем ввести в&nbsp;браузерную строку <code>www.htmlacademy.ru</code>, а&nbsp;не&nbsp;<code>172.67.180.49</code>.</p><p>А&nbsp;где&nbsp;же
 порт? На&nbsp;самом деле порт тоже есть, просто он&nbsp;не&nbsp;указан,
 и&nbsp;для протокола https используется порт по&nbsp;умолчанию&nbsp;— 
443. То&nbsp;есть URL-адрес на&nbsp;самом деле выглядит так: <code>https://htmlacademy.ru:443/courses</code>.</p><p><strong>Вопрос</strong>: а&nbsp;почему до&nbsp;этого был 80, а&nbsp;для <code>https//:</code> 443?</p><p><strong>Ответ</strong>: некоторые порты зарезервированы для стандартных сетевых сервисов. Например, для <code>HTTP</code> это порт 80, для <code>HTTPS</code>&nbsp;— 443, для <code>FTP</code>&nbsp;—
 21. То&nbsp;есть запросы, пришедшие на&nbsp;80 порт, передаются HTTP, 
а&nbsp;на&nbsp;443 порт&nbsp;— HTTPS. Попробуйте открыть URL 
с&nbsp;указанным портом 443: <a href="https://htmlacademy.ru/courses">https://htmlacademy.ru:443/courses</a>. Вас перенаправит на&nbsp;<a href="https://htmlacademy.ru/courses">https://htmlacademy.ru/courses</a>. Это означает, что использовался порт 443.</p><p>Далее,
 следуя протоколу HTTPS, который мы&nbsp;будем подробно разбирать 
в&nbsp;третьем разделе, браузер отправляет запрос на&nbsp;сервер, 
запрашивая файл <code>https://htmlacademy.ru/courses</code>. 
В&nbsp;ответ сервер генерирует динамическую веб-страницу 
и&nbsp;отправляет обратно HTML-текст для отображения этой страницы 
в&nbsp;браузере. Браузер читает HTML-теги и&nbsp;формирует вывод 
веб-страницы на&nbsp;экране.</p><p>Данные между сетевыми устройствами 
передаются пакетами. Протоколы определяют размер, состав и&nbsp;правила 
передачи пакетов между адресами. На&nbsp;одной странице могут быть 
ссылки на&nbsp;разные сайты, и&nbsp;для них браузер открывает новые 
соединения.</p><p>Посмотрим подробнее на&nbsp;примере с&nbsp;почтой. 
Письмо&nbsp;— это пакет данных. Отправитель и&nbsp;получатель&nbsp;— это
 сетевые устройства. Чтобы почта могла понять, куда отправить письмо, 
мы&nbsp;должны знать адрес получателя и&nbsp;предоставить данные 
о&nbsp;своём адресе.</p><p><img src="networks-basics_1_module_1_item_2_files/ips.jpeg" alt="IP-адрес отправителя и IP-адрес получателя"></p><p>В&nbsp;примере
 с&nbsp;почтой протокол может определять, что у&nbsp;адреса должно быть 
название латиницей, название, разделённое символом <code>@</code>, 
и&nbsp;указание почтового домена. Ещё один протокол может сообщить нам, 
что обязательно нужно указать получателя, тему письма, само письмо 
и&nbsp;не&nbsp;более 200 МБ&nbsp;прикреплённых файлов. Примечание: эти 
правила указаны только для примера.</p><blockquote><p>Протоколы нужны для уменьшения хаоса в&nbsp;сети.</p></blockquote><p>Подобных
 правил намного больше. Существует более 60 тысяч протоколов. 
К&nbsp;счастью, все знать не&nbsp;нужно&nbsp;— только основные. 
Их&nbsp;мы&nbsp;рассмотрим в&nbsp;этом курсе.</p><p>Существует множество
 разных протоколов, каждый из&nbsp;которых имеет свои особенности. 
Протоколы разрабатывают несколько фирм, поэтому неудивительно, что 
каждая из&nbsp;них создаёт свой собственный стек (набор) протоколов. 
Хотя эти стеки по&nbsp;умолчанию между собой несовместимы, существуют 
дополнительные протоколы, являющиеся мостами между ними. Это позволяет 
использовать несколько несовместимых между собой протоколов.</p><p>Стоит
 также упомянуть, что не&nbsp;все протоколы могут применяться 
в&nbsp;одинаковых условиях. Иногда применение одного из&nbsp;них выгодно
 для небольшой группы компьютеров и&nbsp;крайне невыгодно для большого 
количества машин с&nbsp;несколькими маршрутизаторами и&nbsp;подключением
 к&nbsp;интернету.</p><p>Маршрутизатор&nbsp;— это одна из&nbsp;точек на&nbsp;пути передачи данных, которые передаются по&nbsp;маршруту.</p><p>Наибольшую популярность приобрёл такой стек протоколов, как TCP/IP, его мы&nbsp;рассмотрим в&nbsp;следующей статье.</p><h2>Маршрут передачи данных</h2><p>Давайте
 разберёмся, по&nbsp;какому маршруту передаются данные. Представим самую
 простую компьютерную сеть&nbsp;— из&nbsp;двух устройств.</p><p><img src="networks-basics_1_module_1_item_2_files/network-1.jpeg" alt="Сеть из двух устройств"></p><p>В&nbsp;такой
 сети нужно беспокоиться только о&nbsp;том, как физически соединить 
устройства и&nbsp;как отправлять данные в&nbsp;формате, который они оба 
понимают.</p><p>Добавим ещё одно устройство.</p><p><img src="networks-basics_1_module_1_item_2_files/network-2.jpeg" alt="Сеть из трёх устройств"></p><p>Появилась
 дополнительная сложность: как каждое устройство может узнать, входящие 
данные предназначены для него или для соседей? Для такой простой сети 
нужна схема адресации.</p><p>Перейдём к&nbsp;шести устройствам. 
На&nbsp;самом деле существует множество способов соединить шесть 
устройств в&nbsp;компьютерную сеть:</p><p><img src="networks-basics_1_module_1_item_2_files/network-3.jpeg" alt="Сеть из шести устройств"></p><p>Здесь
 нужна не&nbsp;только схема адресации, но&nbsp;и&nbsp;маршрутизации, 
то&nbsp;есть по&nbsp;какому маршруту будут передаваться данные. Когда 
сети становятся больше, стратегии маршрутизации становятся более 
важными. Разница между двумя остановками и&nbsp;трёмя остановками 
в&nbsp;пути небольшая. Но&nbsp;в&nbsp;сети тысячи таких остановок, 
поэтому имеет значение, будет 20 остановок или 400.</p><p>Маршрутизация&nbsp;—
 важная составляющая работы сети. Существуют даже специальные 
устройства&nbsp;— маршрутизаторы. Наиболее известный разработчикам 
протокол&nbsp;— это IP&nbsp;(Internet Protocol). Он&nbsp;позволяет 
переправить пакеты от&nbsp;одного сетевого устройства к&nbsp;другому.</p><p>Термин
 «пропускная способность» используется для описания максимальной 
скорости передачи данных в&nbsp;системе. Данные передаются в&nbsp;битах.
 Если сетевое соединение имеет пропускную способность 100 Мбит/с, это 
означает, что он&nbsp;не&nbsp;может передавать больше, чем 100 Мбит 
в&nbsp;секунду.</p><p>Другой способ измерить скорость компьютерной 
сети&nbsp;— задержка. Это время между отправкой сообщения 
и&nbsp;получением первого бита ответа. Если говорить более формально, 
задержка&nbsp;— время между отправкой сообщения с&nbsp;данными 
и&nbsp;получением этого сообщения, измеряемое в&nbsp;миллисекундах.</p><p>Скорость
 интернета&nbsp;— это сочетание пропускной способности и&nbsp;задержки. 
Компьютеры разбивают сообщения на&nbsp;пакеты. Даже если компьютер 
находится в&nbsp;соединении с&nbsp;высокой пропускной способностью, его 
скорость отправки и&nbsp;получения сообщений всё равно будет 
ограничиваться задержкой соединения.</p><p>Фронтенд-разработчик может 
влиять на&nbsp;пропускную способность и&nbsp;на&nbsp;задержку 
соединения. Зная весь маршрут, он&nbsp;может находить «узкие места» 
в&nbsp;рамках своей части работы и&nbsp;ускорять приложение.</p><p>Вы&nbsp;можете
 измерить текущую скорость сети, используя тест скорости интернета: 
веб-сайт, который загружает и&nbsp;выгружает данные, отслеживая, 
насколько быстро они передаются. Скорость скачивания обычно выше, чем 
скорость загрузки, так как пользователь скачивает больше данных 
(веб-страницы, файлы и&nbsp;другое), чем загружает (отправка данных 
форм, обновление фото профиля и&nbsp;другое).</p><p>В&nbsp;этой статье 
мы&nbsp;рассмотрели, что передаётся и&nbsp;как может выглядеть маршрут. 
В&nbsp;следующей статье разберём более подробно маршрут передачи данных.</p></div>



</div></div></div>





</body></html>